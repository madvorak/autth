import Mathlib.Computability.ContextFreeGrammar
import autth.leftmost_deriv

universe uT uN
variable {T : Type uT}
variable {N : Type uN}

namespace ContextFreeGrammar
def GeneratesLeftmost (g : ContextFreeGrammar.{uN} T) (s : List (Symbol T g.NT)) : Prop :=
  g.DerivesLeftmost [Symbol.nonterminal g.initial] s

/-- The language generated by the grammar `g` if only leftmost derivations are used. -/
def leftmost_language (g : ContextFreeGrammar.{uN} T) : Language T :=
  { w | g.GeneratesLeftmost (List.map Symbol.terminal w) }

theorem leftmost_language_eq_language (g : ContextFreeGrammar T) : g.language = g.leftmost_language :=
  by sorry

